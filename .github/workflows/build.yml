name: Build and Test
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Get branch name
        id: branch-name
        uses: tj-actions/branch-names@v5.1

      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x

      - name: Restore DotNet Tools
        run: dotnet tool restore

      - name: Restore dependencies
        run: dotnet restore ./PubDev.Store.sln

      - name: Build
        run: dotnet build ./PubDev.Store.sln --no-restore

      - name: Test
        run: dotnet test ./PubDev.Store.sln /p:CollectCoverage=true /p:CoverletOutputFormat=opencover

      - name: Run Mutations
        run: dotnet stryker -tp "tests/API.Tests/PubDev.Store.API.Tests.csproj"  --reporter "dashboard" --with-baseline:${{ steps.branch-name.outputs.base_ref_branch }} --dashboard-api-key ${{ secrets.STRYKER_API_KEY }} --version ${{ steps.branch-name.outputs.head_ref_branch }}

      - name: "Comment PR"
        uses: actions/github-script@0.3.0
        if: github.event_name == 'pull_request'
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { issue: { number: issue_number }, repo: { owner, repo }  } = context;
            github.issues.createComment({ issue_number, owner, repo, body: '**Stryker** report generated at https://dashboard.stryker-mutator.io/reports/github.com/Pub-Dev/Lesson-DotNet-UnitTest/${{ steps.branch-name.outputs.head_ref_branch }}' });

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11

      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: ./.sonar/scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: pwsh
        run: |
          New-Item -Path ./.sonar/scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path ./.sonar/scanner

      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: pwsh
        run: |
          ./.sonar/scanner/dotnet-sonarscanner begin /k:"Pub-Dev_Lesson-DotNet-UnitTest" /o:"pub-dev" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
          dotnet build ./PubDev.Store.sln --no-restore
          ./.sonar/scanner/dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
